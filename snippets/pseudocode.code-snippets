{
    "If Statement": {
        "prefix": "if",
        "body": [
            "WENN ${1:condition}",
            "\t${0}",
            "ENDE WENN"
        ],
        "description": "If statement in Pseudocode"
    },
    "If Else Statement": {
        "prefix": "ifelse",
        "body": [
            "WENN ${1:condition}",
            "\t${2}",
            "SONST",
            "\t${0}",
            "ENDE WENN"
        ],
        "description": "If Else statement in Pseudocode",
    },
    "Switch Statement": {
        "prefix": "switch",
        "body": [
            "FALLS ${1:condition}",
            "\t${0}",
            "SONST",
            "\t${2}",
            "ENDE FALLS"
        ],
        "description": "Switch statement in Pseudocode"
    },
    "While Loop - TOP": {
        "prefix": "while",
        "body": [
            "SOLANGE ${1:condition}",
            "\t${0}",
            "ENDE SOLANGE"
        ],
        "description": "While loop in Pseudocode"
    },
    "While Loop - BTM": {
        "prefix": "dowhile",
        "body": [
            "WIEDERHOLE",
            "\t${0}",
            "SOLANGE ${1:condition}"
        ],
        "description": "Do While loop in Pseudocode"
    },
    "For Loop": {
        "prefix": "for",
        "body": [
            "FÜR i<-${1:0} BIS ${2:10} SCHRITT ${3:1}",
            "\t${0}",
            "ENDE FÜR"
        ],
        "description": "Standard for loop in Pseudocode"
    },
    "For Loop Iteration": {
        "prefix": "foriter",
        "body": [
            "FÜR ${1:variable} IN ${2:range}",
            "\t${0}",
            "ENDE FÜR"
        ],
        "description": "For Loop iteration in Pseudocode"
    },
    "Loop with Control Break": {
        "prefix": "foribreak",
        "body": [
            "FÜR i<-${1:0} BIS ${2:10} SCHRITT ${3:1}",
            "\tWENN ${4:condition}",
            "\t\tABBRUCH",
            "\tENDE WENN",
            "\t${0}",
            "ENDE FÜR"
        ],
        "description": "For loop with control break in Pseudocode"
    },
    "Function": {
        "prefix": "func",
        "body": [
            "${1:public} ${2:functionName}(${3:args})",
            "\t${0}"
        ],
        "description": "Function in Pseudocode"
    },
    "Function Call": {
        "prefix": "funccall",
        "body": [
            "${1:functionName}(${2:args})"
        ],
        "description": "Function call in Pseudocode"
    },
    "Function Return": {
        "prefix": "funcreturn",
        "body": [
            "${1:public} ${2:functionName}(${3:args})${4: : ${5:returnType}}",
            "\t${0}",
            "\tRÜCKGABE ${6:returnValue}"
        ],
        "description": "Function with return in Pseudocode"
    },
    "Print": {
        "prefix": "print",
        "body": [
            "AUSGABE ${1:output}"
        ],
        "description": "Print statement in Pseudocode"
    },
    "Program Base": {
        "prefix": "program",
        "body": [
            "PROGRAMM ${1:programName}",
            "\t${0}",
            "ENDE PROGRAMM"
        ],
        "description": "Base Program in Pseudocode"
    },
    "Variable Assignment": {
        "prefix": "vs",
        "body": [
            "${1:variable} <- ${2:value}"
        ],
        "description": "Variable assignment in Pseudocode"
    },
    "Variable Declaration": {
        "prefix": "vd",
        "body": [
            "Variable Deklaration ${1:variable} vom Type ${2:type}"
        ],
        "description": "Variable declaration in Pseudocode"
    }
}